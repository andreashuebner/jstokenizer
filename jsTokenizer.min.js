var jsTokenizer=function(){this.constructor!==jsTokenizer&&jsTokenizer._fail("jsTokenizer construction function needs to be called with new"),this.tokens=[],this.tokensFound=[],_that=this,this.row=0,this.column=0};jsTokenizer._fail=function(a){throw new Error(a)},jsTokenizer._isString=function(a){return"[object String]"===toString.call(a)},jsTokenizer._isFunction=function(a){return!!(a&&a.constructor&&a.call&&a.apply)},jsTokenizer._isValidRegExpression=function(a){var b=new RegExp(a);return b.test("hallo"),!0},jsTokenizer._isValidRegFlags=function(a){return jsTokenizer._isString(a)},jsTokenizer._TokenFound=function(a,b){this.name=a,this.value=b},jsTokenizer._Token=function(a,b,c,d,e,f){this.name=a,this.value="",this.callbackFunction=d,this.regExpression=new RegExp(b,c),"undefined"!=typeof e&&(this.row=e),"undefined"!=typeof f&&(this.column=f)},jsTokenizer.prototype.addToken=function(a,b,c,d){jsTokenizer._isString(a)===!1&&jsTokenizer._fail("addToken function expects string as first parameter"),("undefined"==typeof b||jsTokenizer._isValidRegExpression(b)===!1)&&jsTokenizer._fail("addToken function expects valid regular expression as second parameter"),("undefined"==typeof c||jsTokenizer._isValidRegFlags(c)===!1)&&jsTokenizer._fail("addToken function expects valid regular Expression flags as third parameter (or alternatively just an empty string)"),"undefined"!=typeof d&&""!==d&&jsTokenizer._isFunction(d)===!1&&jsTokenizer._fail("addToken function expects as fourth parameter (callback function) either empty string or valid callback function"),"undefined"==typeof d&&(d=""),this._token=new jsTokenizer._Token(a,b,c,d),this.tokens.push(this._token)},jsTokenizer.prototype.returnTokens=function(){return this.tokensFound},jsTokenizer.prototype.tokenizeText=function(a){for(var b=0,c=a,d=a,e=a.length;;){for(var f=!1,g=0;g<this.tokens.length;g++){var h=this.tokens[g],i=h.regExpression,j=i.exec(c);if(null!=j&&j.length>0&&0==j.index){f=!0;{var k=j[0];j.index,k.length}if(""!=h.callbackFunction){if(h.value=k,h=h.callbackFunction.call(_that,h),"undefined"!=typeof h){var l=new jsTokenizer._Token(h.name,h.regExpression,h.regFlags,"",h.row,h.column);l.value=h.value,_that.tokensFound.push(l)}b+="undefined"!=typeof h?h.value.length:k.length}else{h.value=k;var l=new jsTokenizer._Token(h.name,h.regExpression,h.regFlags,"",_that.row,_that.column);l.value=k,_that.tokensFound.push(l),b+=h.value.length}break}}if(f===!1&&(b+=1),c=d.substr(b),b>=e)break}};